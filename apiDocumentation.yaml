swagger: '2.0'
info:
  description: ADES CA1
  version: 1.0.0
  title: ADES
  # put the contact info for your development or API team
  contact:
    email: zhengwei.20@ichat.sp.edu.sg

  license:
    name: Website URL
    url: https://lzwades.herokuapp.com

paths:
  /cart/getShoppingCart:
    post:
      summary: get shopping cart
      operationId: getShoppingCart
      description: |
        By passing in the user id, you can get your shopping cart
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: uid
        description: user unique id
        schema:
          $ref: '#/definitions/UserVerify'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        200:
          description: shopping cart result
          schema:
            type: array
            items:
              $ref: '#/definitions/ShoppingCart'
        403:
          description: verify user fail
        500:
          description: Internal Server Error

  /cart/editShoppingCart:
    post:
      summary: edit shopping cart
      operationId: editShoppingCart
      description: |
        By passing in the user id and cart detail, you can edit your shopping cart
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: uid
        description: user unique id and cart
        schema: 
          $ref: '#/definitions/EditShoppingCart'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        201:
          description: shopping cart edit successful
        500:
          description: Internal Server Error

  /category/getAllCategories:
    get:
      summary: get all category to display
      operationId: getAllCategories
      description: |
        By getting the category user can see the category
      produces:
      - application/json
      responses:
        200:
          description: return all category
          schema:
            $ref: '#/definitions/Categories'
        500:
          description: Internal Server Error

  /category/countOfGame/{mainCategory}:
    get:
      summary: get the total game of the category
      operationId: countOfGame
      description: |
        Send the count of each category
      produces:
      - application/json
      parameters:
      - in: path
        name: mainCategory
        description: main category
        type: string
        required: true
      responses:
        200:
          description: return count of game
          schema:
            $ref: '#/definitions/CountOfGame'
        500:
          description: Internal Server Error

  /game/gameDetailById/{id}:
    get:
      summary: get the game detail by id
      operationId: gameDetailId
      description: |
        Return game detail
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        description: game id
        type: integer
        required: true
      responses:
        200: 
          description: return game detail
          schema:
            $ref: '#/definitions/GameDetail'
        204:
          description: cant find game
        500:
          description: Internal Server Error
  
  /game/gameDetailFilter:
    get:
      summary: get the game detail by filtering
      operationId: gameDetailFilter
      description: |
        Return game detail
      produces:
      - application/json
      parameters:
      - in: query
        name: platform
        description: second category
        type: string
      - in: query
        name: name
        description: search name
        type: string
      - in: query
        name: maincat
        description: the first category name
        type: string
      - in: query
        name: childcat
        description: the second category/platform name
        type: string
      - in: query
        name: minprice
        description: minimum price
        type: integer
      - in: query
        name: maxprice
        description: maximum price
        type: integer
      - in: query
        name: page
        description: show the page number
        type: integer
      - in: query
        name: sort
        description: determine how the game sort
        type: string
      
      responses:
        200:
          description: return game detail
          schema:
            $ref: '#/definitions/GameDetailFilter'
        500:
          description: Internal Server Error

  /game/getDeals:
    get:
      summary: get the game which have discount
      operationId: getDeals
      description: |
        get all game which have discount
      produces:
      - application/json
      responses:
        200:
          description: return game
          schema:
            $ref: '#/definitions/GetDeals'
        500:
          description: Internal Server Error

  /game/getBSellers:
    get:
      summary: get the game which are best selling
      operationId: getBSellers
      description: |
        get 6 game from our game
      produces:
      - application/json
      responses: 
        200:
          description: return game
          schema:
            $ref: '#/definitions/GetBSellers'
        500:
          description: Internal Server Error

  /game/getPreorders:
    get:
      summary: get the game which are pre order
      operationId: getPreorders
      description: |
        get 6 game from our game
      produces:
      - application/json
      responses: 
        200:
          description: return game
          schema:
            $ref: '#/definitions/GetPreorders'
        500:
          description: Internal Server Error

  /game/getLRelease:
    get:
      summary: get the game which are latest release
      operationId: getLRease
      description: |
        get 6 game from our game
      produces:
      - application/json
      responses: 
        200:
          description: return game
          schema:
            $ref: '#/definitions/GetLRelease'
        500:
          description: Internal Server Error

  /order/create-order:
    post:
      summary: check out
      operationId: create-order
      description: |
        check out the shopping cart
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: uid
        description: user unique id
        schema: 
          $ref: '#/definitions/Create-order'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        200:
          description: return order id
          schema:
            $ref: '#/definitions/CreateOrder'
        500:
          description: Internal Server Error

  /order/save-order:
    post:
      summary: save the order detail
      operationId: save-order
      description: |
        save order detail
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: detail
        description: user unique id and order status
        schema: 
          $ref: '#/definitions/Save-order'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        201:
          description: return status
          schema:
            $ref: '#/definitions/SaveOrder'
        500:
          description: Internal Server Error
      
  /order/orderHistory:
    post: 
      summary: get the order history
      operationId: orderHistory
      description: |
        get order history
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: detail
        description: user unique id
        schema: 
          $ref: '#/definitions/UserVerify'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        200:
          description: return order history
          schema:
            $ref: '#/definitions/OrderHistoryResult'
        500:
          description: Internal Server Error

  /order/orderDetails:
    post:
      summary: get order detail
      operationId: orderDetails
      description: |
        get order details by user id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: detail
        description: user unique id
        schema: 
          $ref: '#/definitions/UserVerify'
      - in: header
        name: token
        description: user login token
        type: string
      responses:
        200:
          description: return order history
          schema:
            $ref: '#/definitions/OrderDetails'
        500:
          description: Internal Server Error

  /user/login:
    post:
      summary: user login
      operationId: login
      description: |
        user login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: detail
        description: user detail
        schema: 
          $ref: '#/definitions/UserLogin'
      responses:
        200:
          description: return order history
          schema:
            $ref: '#/definitions/UserLoginResult'
        401: 
          description: Verify user error
        500:
          description: Internal Server Error

  /user/checkLogin:
    post:
      summary: check user login
      operationId: check login
      description: |
        check user login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: detail
        description: user detail
        schema: 
          $ref: '#/definitions/UserVerify'
      responses:
        200:
          description: return user name
          schema:
            $ref: '#/definitions/UserName'
        401: 
          description: Verify user error
        500:
          description: Internal Server Error

definitions:
  UserVerify:
    type: object
    required:
    - uid
    properties:
      uid:
        type: integer
        format: int64
        example: 1820797504

  ShoppingCart:
    type: array
    items: 
      $ref: '#/definitions/ShoppingCartItem'
    
  ShoppingCartItem:
    type: object
    required: 
    - game_id
    - amount
    - g_name
    - g_description
    - g_price
    - g_discount
    - g_image
    properties:
      game_id:
        type: integer
        format: int32
        example: 1
      amount:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: game name
      g_description:
        type: string
        example: description
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image:
        type: string
        example: /images/game1.png

  EditShoppingCart:
    type: object
    required:
    - uid
    - cart
    properties:
      uid:
        type: integer
        format: int64
        example: 1820797504
      cart:
        type: array
        items:
          $ref: '#/definitions/CartBody'

  CartBody:
    type: object
    required:
    - amount
    - id
    properties:
      amount:
        type: integer
        format: int32
        example: 1
      id:
        type: integer
        format: int32
        example: 1
  
  Categories:
    type: object
    required:
    - categories
    properties:
      categories:
        type: array
        items:
          $ref: '#/definitions/FirstCategory'

  FirstCategory:
    type: object
    required:
    - id
    - category_name
    - parent
    properties:
      id:
        type: integer
        format: int32
        example: 1
      category_name:
        type: string
        example: Video games
      parent:
        type: array
        items:
          $ref: '#/definitions/SecondCategory'

  SecondCategory:
    type: object
    required:
    - id
    - category_name
    - fk_main
    - child
    properties:
      id:
        type: integer
        format: int32
        example: 1
      category_name:
        type: string
        example: Steam Games
      fk_main:
        type: integer
        format: int32
        example: 1
      child:
        type: array
        items:
          $ref: '#/definitions/ThirdCategory'

  ThirdCategory:
    type: object
    required:
    - id
    - fk_parent
    - category_name
    properties:
      id:
        type: integer
        format: int32
        example: 1
      fk_parent:
        type: integer
        format: int32
        example: 1
      category_name:
        type: string
        example: Action Games

  CountOfGame:
    type: object
    required:
    - count
    properties:
      count:
        type: integer
        format: int32
        example: 1

  GameDetail:
    type: object
    required:
    - game
    properties:
      game: 
        type: array
        items:
          $ref: '#/definitions/GameDetailArray'
    
  GameDetailArray:
    type: object
    required:
    - g_id
    - g_name
    - g_description
    - g_price
    - g_image
    - g_publishdate
    - g_region
    - g_discount
    - category_name
    - region_name
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_description: 
        type: string
        example: description
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      g_publishdate:
        type: string
        example: 11/11/2021
      g_region:
        type: integer
        example: 1
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      category_name:
        type: string
        example: Steam Games
      region_name:
        type: string
        example: ASIA
    
  GameDetailFilter:
    type: object
    required:
    - games
    properties:
      games:
        type: array
        items:
          $ref: '#/definitions/GameDetailFilterArray'

  GameDetailFilterArray:
    type: object
    required:
    - g_id
    - g_name
    - g_description
    - g_price
    - g_image
    - g_publishdate
    - g_region
    - g_discount
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_description: 
        type: string
        example: description
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      g_publishdate:
        type: string
        example: 11/11/2021
      g_region:
        type: integer
        example: 1
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      
  GetDeals:
    type: object
    required:
    - deals
    properties:
      deals:
        type: array
        items:
          $ref: '#/definitions/GetDealsArray'
  
  GetDealsArray:
    type: object
    required:
    - g_id
    - g_name
    - g_discount
    - g_image
    - g_price
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00

  GetBSellers:
    type: object
    required:
    - bsellers
    properties:
      bsellers:
        type: array
        items:
          $ref: '#/definitions/GetBSellersArray'

  GetBSellersArray:
    type: object
    required:
    - g_id
    - bestseller
    - g_name
    - g_image
    - bs_price
    - g_price
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      bestseller:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      bs_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00

  GetPreorders:
    type: object
    required:
    - preorders
    properties:
      preorders:
        type: array
        items:
          $ref: '#/definitions/GetPreordersArray'

  GetPreordersArray:
    type: object
    required:
    - g_id
    - g_name
    - g_price
    - g_image
    - preorder_price
    - nullif
    - g_publishdate
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      preorder_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      nullif:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_publishdate:
        type: string
        example: 11/11/2021

  GetLRelease:
    type: object
    required:
    - lrease
    properties:
      lrease:
        type: array
        items:
          $ref: '#/definitions/GetLReleaseArray'

  GetLReleaseArray:
    type: object
    required:
    - g_id
    - g_name
    - g_price
    - g_image
    - nullif
    - date
    - g_discount
    properties:
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: Game name
      g_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      g_image: 
        type: string
        example: /images/game1.png
      preorder_price:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      nullif:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      date:
        type: string
        example: 11/11/2021
      g_discount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
    
  Create-order:
    type: object
    required:
    - uid
    properties:
      uid:
        type: integer
        format: int64
        example: 1820797504
  
  CreateOrder:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        example: 18D925798A0340749

  Save-order:
    type: object
    required:
    - uid
    - detail
    properties:
      uid:
        type: integer
        format: int64
        example: 1820797504
      detail:
        $ref: '#/definitions/Save-orderObject'
      
  Save-orderObject:
    type: object
    required:
    - status
    properties:
      status:
        type: string
        example: COMPLETED

  SaveOrder:
    type: object
    required:
    - done
    properties:
      done:
        type: string
        example: 'true'

  OrderHistoryResult:
    type: object
    required:
    - orderhistory
    properties:
      orderhistory:
        type: array
        items:
          $ref: '#/definitions/OrderHistoryResultArray'

  OrderHistoryResultArray:
    type: object
    required:
    - id
    - user_id
    - total
    - buydate
    properties:
      id:
        type: integer
        format: int32
        example: 1
      user_id:
        type: integer
        format: int64
        example: 1820797504
      total:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
      buydate:
        type: string
        example: 11/11/2021
  
  OrderDetails:
    type: object
    required:
    - orderdetails
    properties:
      orderdetails:
        type: array
        items:
          $ref: '#/definitions/OrderDetailsArray'

  OrderDetailsArray:
    type: object
    required:
    - id
    - order_id
    - g_id
    - g_name
    - amount
    properties:
      id:
        type: integer
        format: int32
        example: 1
      order_id:
        type: integer
        format: int32
        example: 1
      g_id:
        type: integer
        format: int32
        example: 1
      g_name:
        type: string
        example: game name 
      amount:
        type: number
        format: NUMERIC(12,2)
        example: 10.00
  
  UserLogin:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        example: example@gamil.com
      password:
        type: string
        example: example

  UserLoginResult:
    type: object
    required:
    - token
    properties:
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywibmFtZSI6IkxpbHkiLCJpYXQiOjE2Mzc5MDI3MjIsImV4cCI6MTYzNzk4OTEyMn0.sybmhllBjRafuPKMlyxnTmuCs2JToI0oF85sC9gmXIg

  UserName:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        example: lily



# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /lzwades/ades/1.0.0
schemes:
 - https